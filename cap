#!/usr/bin/python3
import re
import pickle
import fileinput
from collections import Counter


ch_left = ['a', 's', 'd', 'f', 'g', 'q', 'w', 'e', 'r', 't', 'z', 'x', 'c', 'v']
ch_right = ['h', 'j', 'k', 'l', 'y', 'u', 'i', 'o', 'p', 'n', 'm']


class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

def get_tuples():
    tuples = []
    for cl in ch_left:
        for cr in ch_right:
            tuples.append(cl + cr)
    return tuples

class TS:
    ts = get_tuples()
    index = 0
    m = {}

def main():
    tsc = TS()
    for line in fileinput.input():
        process(line, tsc)

    with open("/tmp/cap.data", "wb") as f:
        pickle.dump(tsc.m, f) 


def process(line, tsc):
    # remove consecutive white spaces
    line = re.sub(' +', ' ', line)

    chars = [c for c in line]

    ts = tsc.ts

    char_map = {}
    for char, count in Counter(chars).most_common():
        char_map[char] = count
    #print(char_map)


    for i, item in enumerate(line.split(' ')):
        len_diff = len(item) - len(ts[tsc.index])

        if len_diff > 0:
            print(bcolors.WARNING + ts[tsc.index] + ' ' * len_diff + bcolors.ENDC, end=" ")
        else:
            print(bcolors.WARNING + ts[tsc.index] + bcolors.ENDC, end=" ")

        tsc.m[ts[tsc.index]] = item
        tsc.index += 1

    print()
    for i, item in enumerate(line.split(' ')):
        len_diff = len(item) - len(ts[tsc.index])

        if len_diff > 0:
            print(item, end=" ")
        else:
            len_diff = -1 * len_diff
            print(item + ' ' * len_diff, end=" ")

    print()



if __name__ == "__main__":
    main()
